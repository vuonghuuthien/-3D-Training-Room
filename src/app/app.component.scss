@mixin img($height) {
  transform: rotateX(-90deg) translateY(calc(#{$height} / 2 * -1));
}

@mixin img_y_z($y, $z) {
  transform: rotateX(-90deg) translateY($y) translateZ($z);
}

// @mixin face_list_god(
//   $selector,
//   $height,
//   $depth,
//   $z_center,
//   $top_fb,
//   $z_fb,
//   $bg_top,
//   $bg_bottom,
//   $bg_front,
//   $bg_back,
//   $bg_left,
//   $bg_right
// ) {
//   #{$selector}__top,
//   #{$selector}__bottom {
//     width: 100%;
//     height: 100%;
//   }

//   #{$selector}__top {
//     transform: rotateX(0deg) translateZ($z_center);
//     background: $bg_top;
//   }
//   #{$selector}__bottom {
//     transform: rotateX(180deg) translateZ($z_center);
//     background: $bg_bottom;
//   }

//   #{$selector}__front,
//   #{$selector}__back {
//     width: 100%;
//     height: $height;
//     top: $top-fb;
//   }
//   #{$selector}__front {
//     transform: rotateX(-90deg) translateZ($z_fb);
//     background: $bg_front;
//   }
//   #{$selector}__back {
//     transform: rotateX(90deg) translateZ($z_fb);
//     background: $bg_back;
//   }

//   #{$selector}__left,
//   #{$selector}__right {
//     width: $height;
//     height: $depth;
//   }
//   #{$selector}__left {
//     left: calc(-1 * $z_center);
//     transform: rotateY(-90deg);
//     background: $bg_left;
//   }
//   #{$selector}__right {
//     left: calc(100% - $z_center);
//     transform: rotateY(90deg);
//     background: $bg_right;
//   }

//   #{$selector}__top,
//   #{$selector}__bottom,
//   #{$selector}__front,
//   #{$selector}__back,
//   #{$selector}__left,
//   #{$selector}__right {
//     background-position: center;
//     background-repeat: no-repeat;
//     background-size: cover;
//   }
// }

@mixin face_list(
  $selector,
  $width,
  $height,
  $depth,
  $bg_top,
  $bg_bottom,
  $bg_front,
  $bg_back,
  $bg_left,
  $bg_right,
  $width_percent: 0,
  $height_percent: 0,
  $depth_percent: 0
) {
  $half-width: calc(#{$width} / 2);
  $half-height: calc(#{$height} / 2);
  $half-depth: calc(#{$depth} / 2);

  & {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #{$selector}__top,
  #{$selector}__bottom {
    width: $width;
    height: $depth;
  }

  #{$selector}__front,
  #{$selector}__back {
    width: $width;
    height: $height;
  }

  #{$selector}__left,
  #{$selector}__right {
    width: $height;
    height: $depth;
  }

  #{$selector}__top {
    transform: rotateX(0deg) translateZ($half-height);
    background: $bg_top;
  }
  #{$selector}__bottom {
    transform: rotateX(180deg) translateZ($half-height);
    background: $bg_bottom;
  }
  #{$selector}__front {
    transform: rotateX(-90deg) translateZ($half-depth);
    background: $bg_front;
  }
  #{$selector}__back {
    transform: rotateX(90deg) translateZ($half-depth);
    background: $bg_back;
  }
  #{$selector}__left {
    @if $width_percent == 0 {
      transform: rotateY(-90deg) translateZ($half-width);
    } @else {
      left: calc(-1 * #{$half-height});
      transform: rotateY(-90deg);
    }
    background: $bg_left;
  }
  #{$selector}__right {
    @if $width_percent == 0 {
      transform: rotateY(90deg) translateZ($half-width);
    } @else {
      left: calc(100% - #{$half-height});
      transform: rotateY(90deg);
    }
    background: $bg_right;
  }

  #{$selector}__top,
  #{$selector}__bottom,
  #{$selector}__front,
  #{$selector}__back,
  #{$selector}__left,
  #{$selector}__right {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }
}

@mixin face_list_light_top(
  $selector,
  $width_sm,
  $height_sm,
  $width,
  $height,
  $depth,
  $angle_width,
  $angle-height,
  $depth-face-lr,
  $depth-face-bottom,
  $bg_top,
  $bg_bottom,
  $bg_front,
  $bg_back,
  $bg_left,
  $bg_right,
  $width_sm_percent: 0,
  $height_sm_percent: 0,
  $width_percent: 0,
  $height_percent: 0,
  $depth_percent: 0
) {
  $half-width-sm: calc(#{$width-sm} / 2);
  $half-height-sm: calc(#{$height-sm} / 2);
  $half-width: calc(#{$width} / 2);
  $half-height: calc(#{$height} / 2);
  $half-depth: calc(#{$depth} / 2);
  $diff-width: calc((#{$width} - #{$width-sm}) / 2);
  $diff-height: calc((#{$height} - #{$height-sm}) / 2);
  $diff-width-lt: calc((#{$width} - #{$width-sm}) / 4);

  & {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #{$selector}__top,
  #{$selector}__bottom {
    width: $width;
    height: 0;
    border-left: $diff-width solid transparent;
    border-right: $diff-width solid transparent;
  }

  #{$selector}__front {
    width: $width;
    height: $height;
  }

  #{$selector}__back {
    width: $width_sm;
    height: $height_sm;
  }

  #{$selector}__left,
  #{$selector}__right {
    width: $height;
    height: $depth-face-lr;

    &::before {
      position: absolute;
      content: "";
      width: 0;
      height: 0;
      bottom: 0;
    }

    &::after {
      position: absolute;
      content: "";
      width: $height_sm;
      height: $depth-face-lr;
    }
  }

  #{$selector}__top {
    border-bottom: $depth solid $bg_top;
    transform: rotateX(0deg) translateZ($half-height);
  }
  #{$selector}__bottom {
    border-top: $depth-face-bottom solid $bg_bottom;
    transform: rotateX(180deg) translateZ($half-height-sm)
      rotateX(calc(-1 * #{$angle_height}));
  }
  #{$selector}__front {
    transform: rotateX(-90deg) translateZ($half-depth);
    background: $bg_front;
  }
  #{$selector}__back {
    transform: rotateX(90deg)
      translateY(calc(#{$half-height} - #{$half-height-sm}))
      translateZ($half-depth);
    background: $bg_back;
  }
  #{$selector}__left {
    transform: rotateY(-90deg)
      translateZ(calc(#{$half-width-sm} + #{$diff-width-lt}))
      rotateX($angle_width);
    &::before {
      right: $height_sm;
      border-left: calc(#{$height} - #{$height_sm}) solid transparent;
      border-bottom: $depth-face-lr solid $bg_left;
    }
    &::after {
      right: 0;
      background: $bg_left;
    }
  }
  #{$selector}__right {
    transform: rotateY(90deg)
      translateZ(calc(#{$half-width-sm} + #{$diff-width-lt}))
      rotateX($angle_width);
    &::before {
      left: $height_sm;
      border-right: calc(#{$height} - #{$height_sm}) solid transparent;
      border-bottom: $depth-face-lr solid $bg_right;
    }
    &::after {
      left: 0;
      background: $bg_right;
    }
  }

  #{$selector}__top,
  #{$selector}__bottom,
  #{$selector}__front,
  #{$selector}__back,
  #{$selector}__left,
  #{$selector}__right {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }
}

@mixin face_list_chair(
  $selector,
  $width,
  $height,
  $depth,
  $bg_top,
  $bg_bottom,
  $bg_front,
  $bg_back,
  $bg_left,
  $bg_right,
  $width_percent: 0,
  $height_percent: 0,
  $depth_percent: 0
) {
  $half-width: calc(#{$width} / 2);
  $half-height: calc(#{$height} / 2);
  $half-depth: calc(#{$depth} / 2);

  & {
    display: flex;
    align-items: center;
    justify-content: center;

    background: $bg_top;
  }

  #{$selector}__top,
  #{$selector}__bottom {
    width: $width;
    height: $depth;
  }

  #{$selector}__front,
  #{$selector}__back {
    width: $width;
    height: $height;
  }

  #{$selector}__left,
  #{$selector}__right {
    width: $height;
    height: $depth;
  }

  #{$selector}__top {
    transform: rotateX(0deg) translateZ($half-height);
    border: 3px solid $bg_top;
    border-bottom: 0;
  }
  #{$selector}__bottom {
    transform: rotateX(180deg) translateZ($half-height);
    border: 3px solid $bg_bottom;
    border-top: 0;
    border-bottom: 0;
  }
  #{$selector}__front {
    transform: rotateX(-90deg) translateZ($half-depth);
    border: 3px solid $bg_front;
    border-top: 0;
    border-bottom: 0;
  }
  #{$selector}__back {
    transform: rotateX(90deg) translateZ($half-depth);
    border: 3px solid $bg_back;
    border-top: 0;
  }
  #{$selector}__left {
    @if $width_percent == 0 {
      transform: rotateY(-90deg) translateZ($half-width);
    } @else {
      left: calc(-1 * $half-height);
      transform: rotateY(-90deg);
    }
    border: 3px solid $bg_left;
  }
  #{$selector}__right {
    @if $width_percent == 0 {
      transform: rotateY(90deg) translateZ($half-width);
    } @else {
      left: calc(100% - $half-height);
      transform: rotateY(90deg);
    }
    border: 3px solid $bg_right;
  }

  #{$selector}__top,
  #{$selector}__bottom,
  #{$selector}__front,
  #{$selector}__back,
  #{$selector}__left,
  #{$selector}__right {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }
}

.env {
  display: flex;
  min-height: 100vh;
  background: radial-gradient(#56ccf2, #2f80ed);
  overflow: hidden;

  .env-left {
    width: 100%;
    max-width: 35%;
    padding-left: 5%;
    display: flex;
    flex-direction: column;
    justify-content: center;

    /* Title */
    .title {
      font-size: 45px;
      font-weight: 500;
      color: white;
    }

    /* Btn Cont */
    .btn-cont {
      margin-top: 20px;
      display: flex;
      align-items: center;

      .button {
        background-color: #292929; /* Green */
        border: none;
        color: white;
        text-decoration: none;
        font-size: 16px;
        border-radius: 5px;
        cursor: pointer;
        height: 45px;
        width: 165px;
        display: flex;
        align-items: center;
        justify-content: center;

        &:not(:last-of-type) {
          margin-right: 10px;
        }

        svg {
          filter: brightness(0) invert(1);
        }

        &.btn-zoom {
          height: 45px;
          width: 45px;
        }
      }
    }
  }

  .env-right {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;

    .controls {
      position: absolute;
      width: 100%;
      height: 100%;

      .control-lr,
      .control-ud {
        display: flex;
        position: absolute;
        z-index: 1000;
        .arrow {
          height: 25px;
          width: fit-content;
          padding: 5px;
          display: flex;
          cursor: pointer;
          opacity: 0.6;
          transition: all 0.2s ease-in-out;
          img {
            height: 100%;
            filter: brightness(0) invert(1);
          }
          &:hover {
            opacity: 1;
            transform: scale(1.5, 2);
          }
          &:first-child {
            margin-right: 20px;
            img {
              transform: scaleX(-1);
            }
          }
        }
      }

      .control-lr {
        left: 85%;
        top: 80%;
        transform: translateX(-50%);
      }

      .control-ud {
        left: 95%;
        top: 50%;
        transform: translateX(-50%) rotateZ(90deg);
      }
    }
  }
}

@media screen and (max-width: 1280px) {
  .env {
    flex-direction: column;
    .env-left {
      max-width: none;
      height: 100%;
      flex: auto;
      align-items: center;
      padding: unset;
    }
    .env-right {
      height: 100%;
      flex: auto;
    }
  }
}

@media screen and (max-width: 834px) {
  .env {
    .env-left {
      .title {
        font-size: 30px;
      }
    }
    .env-right {
      height: 100%;
      flex: auto;

      .controls {
        .control-lr,
        .control-ud {
          left: 50%;
          top: 0;
        }
      }
    }
  }
}

.base {
  scale: var(--base-scale);
  width: var(--base-width);
  height: var(--base-depth);
  // transform: perspective(500px) rotateX(70deg) rotateZ(50deg) translateX(100px)
  //   translateZ(-50px);
  transform: perspective(500px) rotateX(70deg) rotateZ(135deg) translateX(100px)
    translateZ(-50px);
  position: relative;
  // transform: rotateX(-30deg) rotateY(250deg);
  // animation: animate 10s linear infinite;
  transition: all 0.5s linear;
  // margin-left: 50px;
  // margin-top: 50px;
}

.wall-cont {
  .wall-left {
    width: var(--wall-left-width);
    height: var(--wall-left-depth);
    top: 0;
    left: 0;
    position: absolute;
    transform: translateX(calc(-1 * var(--wall-thick)))
      translateZ(calc(var(--wall-left-height) / 2));

    @include face_list(
      ".wall-left",
      var(--wall-left-width),
      var(--wall-left-height),
      var(--wall-left-depth),
      var(--wall-bg-top),
      var(--wall-bg-top),
      var(--wall-bg-front),
      var(--wall-bg-front),
      var(--wall-bg-left),
      var(--wall-bg-left)
    );
  }
  .wall-back {
    width: var(--wall-back-width);
    height: var(--wall-back-depth);
    top: 0;
    left: 0;
    position: absolute;
    transform: translateY(calc(-1 * var(--wall-thick)))
      translateZ(calc(var(--wall-back-height) / 2));

    @include face_list(
      ".wall-back",
      var(--wall-back-width),
      var(--wall-back-height),
      var(--wall-back-depth),
      var(--wall-back-bg-top),
      var(--wall-back-bg-top),
      var(--wall-back-bg-front),
      var(--wall-back-bg-front),
      var(--wall-back-bg-left),
      var(--wall-back-bg-left)
    );
  }
  .col {
    width: var(--col-width);
    height: var(--col-depth);
    top: 0;
    left: 0;
    position: absolute;
    transform: translateY(var(--col-start_y))
      translateZ(calc(var(--col-height) / 2));

    @include face_list(
      ".col",
      var(--col-width),
      var(--col-height),
      var(--col-depth),
      var(--col-bg-top),
      var(--col-bg-top),
      var(--col-bg-front),
      var(--col-bg-front),
      var(--col-bg-left),
      var(--col-bg-left)
    );
  }
}

.floor {
  width: var(--floor-width);
  height: var(--floor-depth);
  top: 0;
  left: 0;
  position: absolute;
  transform: translateZ(calc(var(--floor-height) / 2));

  @include face_list(
    ".floor",
    var(--floor-width),
    var(--floor-height),
    var(--floor-depth),
    var(--floor-bg-top),
    var(--floor-bg-top),
    var(--floor-bg-front),
    var(--floor-bg-front),
    var(--floor-bg-left),
    var(--floor-bg-left)
  );
}

.cabinet-cont {
  height: var(--cabinet-cont-depth);
  width: 100%;
  background: var(--wood-bg-top);
  position: relative;
  transform: translateZ(var(--cabinet-cont-start_z));
  .cabinet {
    top: 0;
    left: 0;
    position: absolute;
    transform: translateX(calc((var(--cabinet-width)) * var(--cabinet-count)));

    .cabinet-top {
      width: var(--cabinet-top-width);
      height: var(--cabinet-top-depth);
      top: 0;
      left: 0;
      position: absolute;
      transform: translateZ(
        calc(var(--cabinet-height) + calc(var(--cabinet-top-height) / 2))
      );

      @include face_list(
        ".cabinet-top",
        var(--cabinet-top-width),
        var(--cabinet-top-height),
        var(--cabinet-top-depth),
        var(--wood-bg-top),
        var(--wood-bg-top),
        var(--wood-bg-front),
        var(--wood-bg-front),
        var(--wood-bg-left),
        var(--wood-bg-left)
      );
    }
    .cabinet-left {
      width: var(--cabinet-left-width);
      height: var(--cabinet-left-depth);
      top: 0;
      left: 0;
      position: absolute;
      transform: translateZ(calc(var(--cabinet-left-height) / 2));

      @include face_list(
        ".cabinet-left",
        var(--cabinet-left-width),
        var(--cabinet-left-height),
        var(--cabinet-left-depth),
        var(--wood-bg-top),
        var(--wood-bg-top),
        var(--wood-bg-front),
        var(--wood-bg-front),
        var(--wood-bg-left),
        var(--wood-bg-left)
      );
    }
    .cabinet-right {
      width: var(--cabinet-right-width);
      height: var(--cabinet-right-depth);
      top: 0;
      left: 0;
      position: absolute;
      transform: translateX(calc(var(--cabinet-width) - var(--cabinet-thick)))
        translateZ(calc(var(--cabinet-right-height) / 2));

      @include face_list(
        ".cabinet-right",
        var(--cabinet-right-width),
        var(--cabinet-right-height),
        var(--cabinet-right-depth),
        var(--wood-bg-top),
        var(--wood-bg-top),
        var(--wood-bg-front),
        var(--wood-bg-front),
        var(--wood-bg-left),
        var(--wood-bg-left)
      );
    }
    .cabinet-front {
      width: var(--cabinet-front-width);
      height: var(--cabinet-front-depth);
      top: 0;
      left: 0;
      position: absolute;
      transform: translateY(calc(var(--cabinet-depth) - var(--cabinet-thick)))
        translateZ(calc(var(--cabinet-front-height) / 2));

      @include face_list(
        ".cabinet-front",
        var(--cabinet-front-width),
        var(--cabinet-front-height),
        var(--cabinet-front-depth),
        var(--cabinet-front-bg-top),
        var(--cabinet-front-bg-top),
        var(--cabinet-front-bg-front),
        var(--cabinet-front-bg-front),
        var(--cabinet-front-bg-left),
        var(--cabinet-front-bg-left)
      );
    }
    .cabinet-back {
      width: var(--cabinet-back-width);
      height: var(--cabinet-back-depth);
      top: 0;
      left: 0;
      position: absolute;
      transform: translateZ(calc(var(--cabinet-back-height) / 2));

      @include face_list(
        ".cabinet-back",
        var(--cabinet-back-width),
        var(--cabinet-back-height),
        var(--cabinet-back-depth),
        var(--wood-bg-top),
        var(--wood-bg-top),
        var(--wood-bg-front),
        var(--wood-bg-front),
        var(--wood-bg-left),
        var(--wood-bg-left)
      );
    }

    &.cabinet-1 {
      .cabinet-right {
        opacity: 0;
      }
    }
    &.cabinet-2 {
      .cabinet-left {
        opacity: 0;
      }
    }
  }
}

.stair-cont {
  width: 100%;
  height: fit-content;
  // background: blue;
  display: flex;

  .stair-step {
    width: 100%;
    height: 100%;
    // background: green;
    display: flex;
    flex-direction: column-reverse;

    &.stair-step-lg {
      .step {
        width: 100%;
        height: var(--step-lg-depth);
        transform: translateZ(
          calc(
            calc(var(--step-lg-height) / 2) + var(--step-lg-height) *
              var(--step-count)
          )
        );

        @include face_list(
          ".step",
          100%,
          var(--step-lg-height),
          var(--step-lg-depth),
          var(--stair-bg-top),
          var(--stair-bg-top),
          var(--stair-bg-front),
          var(--stair-bg-front),
          var(--stair-bg-left),
          var(--stair-bg-left),
          100%
        );
      }
    }

    &.stair-step-sm {
      width: var(--step-sm-width);

      .step {
        width: 100%;
        height: var(--step-sm-depth);
        transform: translateZ(
          calc(
            calc(var(--step-sm-height) / 2) + var(--step-sm-height) *
              var(--step-count)
          )
        );

        @include face_list(
          ".step",
          100%,
          var(--step-sm-height),
          var(--step-sm-depth),
          var(--stair-bg-top),
          var(--stair-bg-top),
          var(--stair-bg-front),
          var(--stair-bg-front),
          var(--stair-bg-left),
          var(--stair-bg-left),
          100%
        );
      }
    }
  }

  &.stair-style-2 {
    .stair-step {
      &.stair-step-lg {
        .step {
          transform: translateZ(
            calc(var(--step-lg-height) * var(--step-count))
          );
          .step-top {
            width: 100%;
            height: var(--step-lg-top-depth);
            top: 0;
            left: 0;
            position: absolute;
            transform: translateZ(
              calc(var(--step-lg-height) + calc(var(--step-lg-top-height) / 2))
            );

            @include face_list(
              ".step-top",
              100%,
              var(--step-lg-top-height),
              var(--step-lg-top-depth),
              var(--stair-bg-top),
              var(--stair-bg-top),
              var(--stair-bg-front),
              var(--stair-bg-front),
              var(--stair-bg-left),
              var(--stair-bg-left),
              100%
            );
          }
          .step-front {
            width: 100%;
            height: var(--step-lg-front-depth);
            top: 0;
            left: 0;
            position: absolute;
            transform: translateY(var(--step-lg-depth))
              translateZ(calc(var(--step-lg-front-height) / 2));

            @include face_list(
              ".step-front",
              100%,
              var(--step-lg-front-height),
              var(--step-lg-front-depth),
              var(--stair-bg-top),
              var(--stair-bg-top),
              var(--stair-bg-front),
              var(--stair-bg-front),
              var(--stair-bg-left),
              var(--stair-bg-left),
              100%
            );
          }
        }
      }
      &.stair-step-sm {
        position: absolute;
        right: 0;
        top: calc(var(--step-sm-depth) + var(--step-thick));
        transform: translateZ(var(--step-thick));
        .step {
          &:nth-child(even) {
            opacity: 0;
          }

          .step__top,
          .step__bottom {
            background: var(--stair-sm-bg-top);
          }

          .step__front,
          .step__back {
            background: var(--stair-sm-bg-front);
          }

          .step__left,
          .step__right {
            background: var(--stair-sm-bg-left);
          }
        }
      }
    }
  }
}

.board-cont {
  top: 100%;
  left: 50%;
  position: absolute;
  transform: translateX(-50%) translateZ(20px);
  .board {
    width: var(--board-width);
    height: var(--board-depth);
    transform: translateZ(calc(var(--board-height) / 2));

    @include face_list(
      ".board",
      var(--board-width),
      var(--board-height),
      var(--board-depth),
      var(--board-bg-top),
      var(--board-bg-top),
      var(--board-bg-front),
      var(--board-bg-front),
      var(--board-bg-left),
      var(--board-bg-left)
    );
  }
}

.people {
  height: var(--people-height_lg);
  width: fit-content;
  top: 0;
  left: 0;
  position: absolute;

  img {
    height: 100%;
    width: fit-content;
  }

  &.people_praise {
    height: var(--people-height_xl);
    top: 75%;
    left: 60%;
    @include img(var(--people-height_xl));
  }

  &.people_guitarist {
    height: var(--people-height_md);
    left: 40%;
    @include img_y_z(-9px, 2px);
  }

  &.people_laptop {
    height: var(--people-height_lg);
    top: -130%;
    left: 20%;
    @include img(var(--people-height_lg));
  }
}

.seat-cushion {
  width: var(--seat-cushion-width);
  height: var(--seat-cushion-depth);
  transform: translateZ(calc(var(--seat-cushion-height) / 2));
  top: calc(100% - var(--seat-cushion-depth));
  left: var(--seat-cushion-space);
  position: absolute;

  @include face_list(
    ".seat-cushion",
    var(--seat-cushion-width),
    var(--seat-cushion-height),
    var(--seat-cushion-depth),
    var(--seat-cushion-bg-top),
    var(--seat-cushion-bg-top),
    var(--seat-cushion-bg-front),
    var(--seat-cushion-bg-front),
    var(--seat-cushion-bg-left),
    var(--seat-cushion-bg-left)
  );

  &-last {
    width: calc(100% - var(--seat-cushion-space));

    @include face_list(
      ".seat-cushion",
      calc(100% - var(--seat-cushion-space)),
      var(--seat-cushion-height),
      var(--seat-cushion-depth),
      var(--seat-cushion-bg-top),
      var(--seat-cushion-bg-top),
      var(--seat-cushion-bg-front),
      var(--seat-cushion-bg-front),
      var(--seat-cushion-bg-left),
      var(--seat-cushion-bg-left)
    );
  }
}

.table-mini {
  top: -50%;
  left: 50%;
  position: absolute;

  .table-mini-top {
    width: var(--table-mini-top-width);
    height: var(--table-mini-top-depth);
    top: 0;
    left: 0;
    position: absolute;
    transform: translateZ(
      calc(var(--table-mini-height) + calc(var(--table-mini-top-height) / 2))
    );

    @include face_list(
      ".table-mini-top",
      var(--table-mini-top-width),
      var(--table-mini-top-height),
      var(--table-mini-top-depth),
      var(--table-mini-green-bg-top),
      var(--table-mini-green-bg-top),
      var(--table-mini-green-bg-front),
      var(--table-mini-green-bg-front),
      var(--table-mini-green-bg-left),
      var(--table-mini-green-bg-left)
    );
  }
  .table-mini-front {
    width: var(--table-mini-front-width);
    height: var(--table-mini-front-depth);
    top: 0;
    left: 0;
    position: absolute;
    transform: translateY(
        calc(var(--table-mini-depth) - var(--table-mini-thick))
      )
      translateZ(calc(var(--table-mini-front-height) / 2));

    @include face_list(
      ".table-mini-front",
      var(--table-mini-front-width),
      var(--table-mini-front-height),
      var(--table-mini-front-depth),
      var(--table-mini-green-bg-top),
      var(--table-mini-green-bg-top),
      var(--table-mini-green-bg-front),
      var(--table-mini-green-bg-front),
      var(--table-mini-green-bg-left),
      var(--table-mini-green-bg-left)
    );
  }
  .table-mini-back {
    width: var(--table-mini-back-width);
    height: var(--table-mini-back-depth);
    top: 0;
    left: 0;
    position: absolute;
    transform: translateZ(
      calc(
        calc(var(--table-mini-back-height) / 2) +
          var(--table-mini-back-diff_height)
      )
    );

    @include face_list(
      ".table-mini-back",
      var(--table-mini-back-width),
      var(--table-mini-back-height),
      var(--table-mini-back-depth),
      var(--table-mini-green-bg-top),
      var(--table-mini-green-bg-top),
      var(--table-mini-green-bg-front),
      var(--table-mini-green-bg-front),
      var(--table-mini-green-bg-left),
      var(--table-mini-green-bg-left)
    );
  }
  .table-mini-front-2,
  .table-mini-back-2 {
    left: calc(var(--table-mini-width) - var(--table-mini-thick));
  }

  &.table-mini-2 {
    left: 20%;

    .table-mini-top,
    .table-mini-front,
    .table-mini-back {
      &__top,
      &__bottom {
        background: var(--table-mini-yellow-bg-top) !important;
      }
      &__left,
      &__right {
        background: var(--table-mini-yellow-bg-left) !important;
      }
      &__front,
      &__back {
        background: var(--table-mini-yellow-bg-front) !important;
      }
    }
  }

  &.table-mini-3 {
    left: 70%;

    .table-mini-top,
    .table-mini-front,
    .table-mini-back {
      &__top,
      &__bottom {
        background: var(--table-mini-red-bg-top) !important;
      }
      &__left,
      &__right {
        background: var(--table-mini-red-bg-left) !important;
      }
      &__front,
      &__back {
        background: var(--table-mini-red-bg-front) !important;
      }
    }
  }
}

.door {
  width: var(--door-width);
  height: var(--door-depth);
  top: 0;
  left: 0;
  position: absolute;
  transform: translateX(var(--door-width))
    translateZ(calc(var(--door-height) / 2));

  @include face_list(
    ".door",
    var(--door-width),
    var(--door-height),
    var(--door-depth),
    var(--door-bg-top),
    var(--door-bg-top),
    var(--door-bg-front),
    var(--door-bg-front),
    var(--door-bg-left),
    var(--door-bg-right)
  );

  &.door-room-1 {
    top: auto;
    left: auto;
    right: 0;
    bottom: 5%;
  }

  &.door-room-2 {
    top: 0;
    left: auto;
    right: 0;
  }
}

.projector {
  width: var(--projector-width);
  height: var(--projector-depth);
  top: 0;
  left: 0;
  position: absolute;
  transform: translateX(calc((var(--room-width) - var(--projector-width)) / 2))
    translateY(var(--projector-start_y))
    translateZ(calc(var(--room-height) - calc(var(--projector-height) / 2)));

  @include face_list(
    ".projector",
    var(--projector-width),
    var(--projector-height),
    var(--projector-depth),
    var(--projector-bg-top),
    var(--projector-bg-top),
    var(--projector-bg-front),
    var(--projector-bg-front),
    var(--projector-bg-left),
    var(--projector-bg-left)
  );
}

.projector-light {
  position: relative;
  background: red;
}
.light {
  width: var(--projector-light-width);
  height: var(--projector-light-depth);
  top: 0;
  left: 50%;
  position: absolute;
  transform: translateX(-50%)
    translateZ(calc(var(--projector-light-height) / 2)) rotateX(90deg);

  @include face_list_light_top(
    ".light",
    var(--projector-light-width_sm),
    var(--projector-light-height_sm),
    var(--projector-light-width),
    var(--projector-light-height),
    var(--projector-light-depth),
    var(--projector-light-angle-width),
    var(--projector-light-angle-height),
    var(--projector-light-depth-face-lr),
    var(--projector-light-depth-face-bottom),
    var(--projector-light-bg-top),
    var(--projector-light-bg-top),
    var(--projector-light-bg-front),
    var(--projector-light-bg-back),
    var(--projector-light-bg-left),
    var(--projector-light-bg-left)
  );

  .light__front {
    opacity: 0.2;
  }
}

.chair {
  width: var(--chair-width);
  height: var(--chair-depth);
  top: 0;
  left: 0;
  position: absolute;
  transform: translateX(var(--chair-width))
    translateZ(calc(calc(var(--chair-height) / 2) + 1px));

  @include face_list_chair(
    ".chair",
    var(--chair-width),
    var(--chair-height),
    var(--chair-depth),
    var(--chair-bg-top),
    var(--chair-bg-top),
    var(--chair-bg-front),
    var(--chair-bg-front),
    var(--chair-bg-left),
    var(--chair-bg-left)
  );

  &.chair-1 {
    top: 85%;
    left: -10%;
    transform: translateX(var(--chair-width))
      translateZ(calc(var(--chair-height) / 2 + 1px)) rotateZ(230deg);
  }

  &.chair-2 {
    top: 63%;
    left: -10%;
    transform: translateX(var(--chair-width))
      translateZ(calc(var(--chair-height) / 2 + 1px)) rotateZ(-60deg);
  }

  &.chair-3 {
    top: 63%;
    left: 44%;
    transform: translateX(var(--chair-width))
      translateZ(calc(var(--chair-height) / 2 + 1px)) rotateZ(50deg);
  }
}

.chair-cushion {
  width: var(--chair-cushion-width);
  height: var(--chair-cushion-depth);
  top: 5%;
  right: 100%;
  position: absolute;
  transform: translateX(var(--chair-cushion-width))
    translateZ(calc(var(--chair-cushion-height) / 2 - var(--chair-height) / 2));

  @include face_list(
    ".chair-cushion",
    var(--chair-cushion-width),
    var(--chair-cushion-height),
    var(--chair-cushion-depth),
    var(--chair-cushion-bg-top),
    var(--chair-cushion-bg-top),
    var(--chair-cushion-bg-front),
    var(--chair-cushion-bg-front),
    var(--chair-cushion-bg-left),
    var(--chair-cushion-bg-left)
  );

  &.chair-cushion-for-back {
    transform: translateX(var(--chair-cushion-width))
      translateZ(
        calc(var(--chair-cushion-height) / 2 - var(--chair-height) / 2)
      )
      rotateX(10deg);
  }
}

.draw-wall-cont {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  .draw-wall {
    width: var(--draw-wall-width);
    height: var(--draw-wall-height);
    transform: rotateZ(-90deg);

    .logo {
      position: absolute;
      top: 5%;
      left: 90%;
      height: var(--logo-height);
      img {
        height: 100%;
      }
    }

    .slogan-cont {
      position: absolute;
      top: 10%;
      left: -40%;
      * {
        font-family: "Bai Jamjuree", sans-serif;
        font-size: 18px;
        white-space: nowrap;
      }

      .label {
        font-size: 0.4em;
        color: var(--slogan-label);
      }

      .slogan {
        margin-top: 3px;
        color: var(--slogan);
        position: relative;

        &::before,
        &::after {
          position: absolute;
          font-size: 1.2em;
          font-weight: 600;
        }
        &::before {
          content: "\201C";
          top: -5%;
        }
        &::after {
          content: "\201D";
          right: 23%;
          bottom: -26%;
        }

        div:first-of-type {
          margin-left: 1em;
        }

        div:last-of-type {
          margin-top: 0.2em;
        }
      }
    }
  }
}

.table-wall {
  width: var(--table-wall-width);
  height: var(--table-wall-depth);
  top: 0;
  left: 0;
  position: absolute;
  transform: translateX(var(--table-wall-width))
    translateY(var(--table-wall-start_y))
    translateZ(calc(var(--table-wall-height) / 2 + var(--table-wall-start_z)));

  @include face_list(
    ".table-wall",
    var(--table-wall-width),
    var(--table-wall-height),
    var(--table-wall-depth),
    var(--table-wall-bg-top),
    var(--table-wall-bg-bottom),
    var(--table-wall-bg-front),
    var(--table-wall-bg-front),
    var(--table-wall-bg-left),
    var(--table-wall-bg-right)
  );

  .table-wall {
    &__top,
    &__front,
    &__back {
      opacity: 0;
    }
    &__left,
    &__right {
      border-radius: var(--table-wall-border_radius);
      border: 1px solid rgba(43, 131, 252, 0.1);
    }
  }

  &-last {
    opacity: 0;
  }

  &-horizontal {
    transform: translateX(calc(var(--table-wall-height) / 2))
      translateY(var(--table-wall-start_y))
      translateZ(calc(var(--table-wall-width) + var(--table-wall-start_z)))
      rotateY(90deg);
  }
}
