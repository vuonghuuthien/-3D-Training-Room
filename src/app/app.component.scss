@function addUnit($css_variable) {
  @return calc(var($css_variable) * 1px);
}

@mixin img($height) {
  transform: rotateX(-90deg) translateY(calc($height / 2 * -1));
}

@mixin img_y_z($y, $z) {
  transform: rotateX(-90deg) translateY($y) translateZ($z);
}

@function halfNum($value) {
  @return calc(addUnit($value) / 2);
}

// @mixin face_list_god(
//   $selector,
//   $height,
//   $depth,
//   $z_center,
//   $top_fb,
//   $z_fb,
//   $bg_top,
//   $bg_bottom,
//   $bg_front,
//   $bg_back,
//   $bg_left,
//   $bg_right
// ) {
//   #{$selector}__top,
//   #{$selector}__bottom {
//     width: 100%;
//     height: 100%;
//   }

//   #{$selector}__top {
//     transform: rotateX(0deg) translateZ($z_center);
//     background: $bg_top;
//   }
//   #{$selector}__bottom {
//     transform: rotateX(180deg) translateZ($z_center);
//     background: $bg_bottom;
//   }

//   #{$selector}__front,
//   #{$selector}__back {
//     width: 100%;
//     height: $height;
//     top: $top-fb;
//   }
//   #{$selector}__front {
//     transform: rotateX(-90deg) translateZ($z_fb);
//     background: $bg_front;
//   }
//   #{$selector}__back {
//     transform: rotateX(90deg) translateZ($z_fb);
//     background: $bg_back;
//   }

//   #{$selector}__left,
//   #{$selector}__right {
//     width: $height;
//     height: $depth;
//   }
//   #{$selector}__left {
//     left: calc(-1 * $z_center);
//     transform: rotateY(-90deg);
//     background: $bg_left;
//   }
//   #{$selector}__right {
//     left: calc(100% - $z_center);
//     transform: rotateY(90deg);
//     background: $bg_right;
//   }

//   #{$selector}__top,
//   #{$selector}__bottom,
//   #{$selector}__front,
//   #{$selector}__back,
//   #{$selector}__left,
//   #{$selector}__right {
//     background-position: center;
//     background-repeat: no-repeat;
//     background-size: cover;
//   }
// }

@mixin face_list(
  $selector,
  $width,
  $height,
  $depth,
  $bg_top,
  $bg_bottom,
  $bg_front,
  $bg_back,
  $bg_left,
  $bg_right,
  $width_percent: 0,
  $height_percent: 0,
  $depth_percent: 0
) {
  $half-width: calc(#{$width} / 2);
  $half-height: calc(#{$height} / 2);
  $half-depth: calc(#{$depth} / 2);

  & {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #{$selector}__top,
  #{$selector}__bottom {
    width: $width;
    height: $depth;
  }

  #{$selector}__front,
  #{$selector}__back {
    width: $width;
    height: $height;
  }

  #{$selector}__left,
  #{$selector}__right {
    width: $height;
    height: $depth;
  }

  #{$selector}__top {
    transform: rotateX(0deg) translateZ($half-height);
    background: $bg_top;
  }
  #{$selector}__bottom {
    transform: rotateX(180deg) translateZ($half-height);
    background: $bg_bottom;
  }
  #{$selector}__front {
    transform: rotateX(-90deg) translateZ($half-depth);
    background: $bg_front;
  }
  #{$selector}__back {
    transform: rotateX(90deg) translateZ($half-depth);
    background: $bg_back;
  }
  #{$selector}__left {
    @if $width_percent == 0 {
      transform: rotateY(-90deg) translateZ($half-width);
    } @else {
      left: calc(-1 * $half-height);
      transform: rotateY(-90deg);
    }
    background: $bg_left;
  }
  #{$selector}__right {
    @if $width_percent == 0 {
      transform: rotateY(90deg) translateZ($half-width);
    } @else {
      left: calc(100% - $half-height);
      transform: rotateY(90deg);
    }
    background: $bg_right;
  }

  #{$selector}__top,
  #{$selector}__bottom,
  #{$selector}__front,
  #{$selector}__back,
  #{$selector}__left,
  #{$selector}__right {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }
}

.env {
  display: flex;
  min-height: 100vh;
  background: radial-gradient(#56ccf2, #2f80ed);
  overflow: hidden;

  .env-left {
    width: 100%;
    max-width: 40%;
    padding-left: 5%;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .env-right {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;

    .controls {
      position: absolute;
      width: 100%;
      height: 100%;

      .control-lr,
      .control-ud {
        display: flex;
        position: absolute;
        .arrow {
          height: 20px;
          width: fit-content;
          padding: 5px;
          display: flex;
          cursor: pointer;
          opacity: 0.6;
          transition: all 0.2s ease-in-out;
          img {
            height: 100%;
            filter: brightness(0) invert(1);
          }
          &:hover {
            opacity: 1;
            transform: scale(1.5, 2);
          }
          &:first-child {
            margin-right: 20px;
            img {
              transform: scaleX(-1);
            }
          }
        }
      }

      .control-lr {
        left: 85%;
        top: 80%;
        transform: translateX(-50%);
      }

      .control-ud {
        left: 95%;
        top: 50%;
        transform: translateX(-50%) rotateZ(90deg);
      }
    }
  }
}

.title {
  font-size: 45px;
  font-weight: 500;
  color: white;
}

.btn-cont {
  margin-top: 10px;

  .button {
    background-color: #292929; /* Green */
    border: none;
    color: white;
    text-align: center;
    text-decoration: none;
    font-size: 16px;
    border-radius: 5px;
    cursor: pointer;
    height: 45px;
    width: 165px;
  }
}

.base {
  width: addUnit(--base-width);
  height: addUnit(--base-depth);
  // transform: perspective(500px) rotateX(70deg) rotateZ(50deg) translateX(100px)
  //   translateZ(-50px);
  transform: perspective(500px) rotateX(70deg) rotateZ(135deg) translateX(100px)
    translateZ(-50px);
  position: relative;
  // transform: rotateX(-30deg) rotateY(250deg);
  // animation: animate 10s linear infinite;
  transition: all 0.5s linear;
  // margin-left: 50px;
  // margin-top: 50px;
}

.wall-cont {
  .wall-left {
    width: addUnit(--wall-left-width);
    height: addUnit(--wall-left-depth);
    top: 0;
    left: 0;
    position: absolute;
    transform: translateX(calc(-1 * addUnit(--wall-thick)))
      translateZ(halfNum(--wall-left-height));

    @include face_list(
      ".wall-left",
      addUnit(--wall-left-width),
      addUnit(--wall-left-height),
      addUnit(--wall-left-depth),
      var(--wall-bg-top),
      var(--wall-bg-top),
      var(--wall-bg-front),
      var(--wall-bg-front),
      var(--wall-bg-left),
      var(--wall-bg-left)
    );
  }
  .wall-back {
    width: addUnit(--wall-back-width);
    height: addUnit(--wall-back-depth);
    top: 0;
    left: 0;
    position: absolute;
    transform: translateY(calc(-1 * addUnit(--wall-thick)))
      translateZ(halfNum(--wall-back-height));

    @include face_list(
      ".wall-back",
      addUnit(--wall-back-width),
      addUnit(--wall-back-height),
      addUnit(--wall-back-depth),
      var(--wall-back-bg-top),
      var(--wall-back-bg-top),
      var(--wall-back-bg-front),
      var(--wall-back-bg-front),
      var(--wall-back-bg-left),
      var(--wall-back-bg-left)
    );
  }
}

.floor {
  width: addUnit(--floor-width);
  height: addUnit(--floor-depth);
  top: 0;
  left: 0;
  position: absolute;
  transform: translateZ(halfNum(--floor-height));

  @include face_list(
    ".floor",
    addUnit(--floor-width),
    addUnit(--floor-height),
    addUnit(--floor-depth),
    var(--floor-bg-top),
    var(--floor-bg-top),
    var(--floor-bg-front),
    var(--floor-bg-front),
    var(--floor-bg-left),
    var(--floor-bg-left)
  );
}

.cabinet-cont {
  height: addUnit(--cabinet-cont-depth);
  width: 100%;
  background: var(--wood-bg-top);
  position: relative;
  transform: translateZ(addUnit(--cabinet_cont_start_z));
  .cabinet {
    top: 0;
    left: 0;
    position: absolute;
    transform: translateX(
      calc((addUnit(--cabinet-width)) * var(--cabinet-count))
    );

    .cabinet-top {
      width: addUnit(--cabinet-top-width);
      height: addUnit(--cabinet-top-depth);
      top: 0;
      left: 0;
      position: absolute;
      transform: translateZ(
        calc(addUnit(--cabinet-height) + halfNum(--cabinet-top-height))
      );

      @include face_list(
        ".cabinet-top",
        addUnit(--cabinet-top-width),
        addUnit(--cabinet-top-height),
        addUnit(--cabinet-top-depth),
        var(--wood-bg-top),
        var(--wood-bg-top),
        var(--wood-bg-front),
        var(--wood-bg-front),
        var(--wood-bg-left),
        var(--wood-bg-left)
      );
    }
    .cabinet-left {
      width: addUnit(--cabinet-left-width);
      height: addUnit(--cabinet-left-depth);
      top: 0;
      left: 0;
      position: absolute;
      transform: translateZ(halfNum(--cabinet-left-height));

      @include face_list(
        ".cabinet-left",
        addUnit(--cabinet-left-width),
        addUnit(--cabinet-left-height),
        addUnit(--cabinet-left-depth),
        var(--wood-bg-top),
        var(--wood-bg-top),
        var(--wood-bg-front),
        var(--wood-bg-front),
        var(--wood-bg-left),
        var(--wood-bg-left)
      );
    }
    .cabinet-right {
      width: addUnit(--cabinet-right-width);
      height: addUnit(--cabinet-right-depth);
      top: 0;
      left: 0;
      position: absolute;
      transform: translateX(
          calc(addUnit(--cabinet-width) - addUnit(--cabinet-thick))
        )
        translateZ(halfNum(--cabinet-right-height));

      @include face_list(
        ".cabinet-right",
        addUnit(--cabinet-right-width),
        addUnit(--cabinet-right-height),
        addUnit(--cabinet-right-depth),
        var(--wood-bg-top),
        var(--wood-bg-top),
        var(--wood-bg-front),
        var(--wood-bg-front),
        var(--wood-bg-left),
        var(--wood-bg-left)
      );
    }
    .cabinet-front {
      width: addUnit(--cabinet-front-width);
      height: addUnit(--cabinet-front-depth);
      top: 0;
      left: 0;
      position: absolute;
      transform: translateY(
          calc(addUnit(--cabinet-depth) - addUnit(--cabinet-thick))
        )
        translateZ(halfNum(--cabinet-front-height));

      @include face_list(
        ".cabinet-front",
        addUnit(--cabinet-front-width),
        addUnit(--cabinet-front-height),
        addUnit(--cabinet-front-depth),
        var(--cabinet-front-bg-top),
        var(--cabinet-front-bg-top),
        var(--cabinet-front-bg-front),
        var(--cabinet-front-bg-front),
        var(--cabinet-front-bg-left),
        var(--cabinet-front-bg-left)
      );
    }
    .cabinet-back {
      width: addUnit(--cabinet-back-width);
      height: addUnit(--cabinet-back-depth);
      top: 0;
      left: 0;
      position: absolute;
      transform: translateZ(halfNum(--cabinet-back-height));

      @include face_list(
        ".cabinet-back",
        addUnit(--cabinet-back-width),
        addUnit(--cabinet-back-height),
        addUnit(--cabinet-back-depth),
        var(--wood-bg-top),
        var(--wood-bg-top),
        var(--wood-bg-front),
        var(--wood-bg-front),
        var(--wood-bg-left),
        var(--wood-bg-left)
      );
    }
  }
}

.stair-cont {
  width: 100%;
  height: fit-content;
  // background: blue;
  display: flex;

  .stair-step {
    width: 100%;
    height: 100%;
    // background: green;
    display: flex;
    flex-direction: column-reverse;

    &.stair-step-sm {
      width: addUnit(--stair-sm-width);
    }

    .step {
      width: 100%;
      height: addUnit(--step-depth);
      transform: translateZ(
        calc(
          halfNum(--step-height) + addUnit(--step-height) *
            var(--step-count)
        )
      );

      @include face_list(
        ".step",
        100%,
        addUnit(--step-height),
        addUnit(--step-depth),
        var(--stair-bg-top),
        var(--stair-bg-top),
        var(--stair-bg-front),
        var(--stair-bg-front),
        var(--stair-bg-left),
        var(--stair-bg-left),
        100%
      );
    }
  }

  &.stair-style-2 {
    .stair-step {
      &.stair-step-lg {
        .step {
          transform: translateZ(
            calc(addUnit(--step-height) * var(--step-count))
          );
          .step-top {
            width: 100%;
            height: addUnit(--step-top-depth);
            top: 0;
            left: 0;
            position: absolute;
            transform: translateZ(
              calc(
                addUnit(--step-height) + halfNum(--step-top-height)
              )
            );

            @include face_list(
              ".step-top",
              100%,
              addUnit(--step-top-height),
              addUnit(--step-top-depth),
              var(--stair-bg-top),
              var(--stair-bg-top),
              var(--stair-bg-front),
              var(--stair-bg-front),
              var(--stair-bg-left),
              var(--stair-bg-left),
              100%
            );
          }
          .step-front {
            width: 100%;
            height: addUnit(--step-front-depth);
            top: 0;
            left: 0;
            position: absolute;
            transform: translateY(addUnit(--step-depth))
              translateZ(halfNum(--step-front-height));

            @include face_list(
              ".step-front",
              100%,
              addUnit(--step-front-height),
              addUnit(--step-front-depth),
              var(--stair-bg-top),
              var(--stair-bg-top),
              var(--stair-bg-front),
              var(--stair-bg-front),
              var(--stair-bg-left),
              var(--stair-bg-left),
              100%
            );
          }
        }
      }
      &.stair-step-sm {
        position: absolute;
        right: 0;
        top: calc(addUnit(--step-depth) + addUnit(--step-thick));
        transform: translateZ(addUnit(--step-thick));
        .step {
          &:nth-child(even) {
            opacity: 0;
          }

          .step__top,
          .step__bottom {
            background: var(--stair-sm-bg-top);
          }

          .step__front,
          .step__back {
            background: var(--stair-sm-bg-front);
          }

          .step__left,
          .step__right {
            background: var(--stair-sm-bg-left);
          }
        }
      }
    }
  }
}

.board-cont {
  top: 100%;
  left: 50%;
  position: absolute;
  transform: translateX(-50%) translateZ(15px);
  .board {
    width: addUnit(--board-width);
    height: addUnit(--board-depth);
    transform: translateZ(halfNum(--board-height));

    @include face_list(
      ".board",
      addUnit(--board-width),
      addUnit(--board-height),
      addUnit(--board-depth),
      var(--board-bg-top),
      var(--board-bg-top),
      var(--board-bg-front),
      var(--board-bg-front),
      var(--board-bg-left),
      var(--board-bg-left)
    );
  }
}

.people {
  height: addUnit(--height);
  width: fit-content;
  top: 0;
  left: 0;
  position: absolute;
  @include img(addUnit(--height));
  img {
    height: 100%;
    width: fit-content;
  }

  &.people_praise {
    top: 75%;
    left: 60%;
  }

  &.people_guitarist {
    left: 40%;
    @include img_y_z(-8px, 1px);
  }

  &.people_laptop {
    top: -130%;
  }
}

.seat-cushion {
  width: addUnit(--seat-cushion-width);
  height: addUnit(--seat-cushion-depth);
  transform: translateZ(halfNum(--seat-cushion-height));
  top: calc(100% - addUnit(--seat-cushion-depth));
  left: addUnit(--seat-cushion-space);
  position: absolute;

  @include face_list(
    ".seat-cushion",
    addUnit(--seat-cushion-width),
    addUnit(--seat-cushion-height),
    addUnit(--seat-cushion-depth),
    var(--seat-cushion-bg-top),
    var(--seat-cushion-bg-top),
    var(--seat-cushion-bg-front),
    var(--seat-cushion-bg-front),
    var(--seat-cushion-bg-left),
    var(--seat-cushion-bg-left)
  );

  &.seat-cushion-last {
    width: calc(100% - addUnit(--seat-cushion-space));

    @include face_list(
      ".seat-cushion",
      calc(100% - addUnit(--seat-cushion-space)),
      addUnit(--seat-cushion-height),
      addUnit(--seat-cushion-depth),
      var(--seat-cushion-bg-top),
      var(--seat-cushion-bg-top),
      var(--seat-cushion-bg-front),
      var(--seat-cushion-bg-front),
      var(--seat-cushion-bg-left),
      var(--seat-cushion-bg-left)
    );
  }
}

.table-mini {
  top: -50%;
  left: 50%;
  position: absolute;

  .table-mini-top {
    width: addUnit(--table-mini-top-width);
    height: addUnit(--table-mini-top-depth);
    top: 0;
    left: 0;
    position: absolute;
    transform: translateZ(
      calc(addUnit(--table-mini-height) + halfNum(--table-mini-top-height))
    );

    @include face_list(
      ".table-mini-top",
      addUnit(--table-mini-top-width),
      addUnit(--table-mini-top-height),
      addUnit(--table-mini-top-depth),
      var(--glass-green-bg-top),
      var(--glass-green-bg-top),
      var(--glass-green-bg-front),
      var(--glass-green-bg-front),
      var(--glass-green-bg-left),
      var(--glass-green-bg-left)
    );
  }
  .table-mini-front {
    width: addUnit(--table-mini-front-width);
    height: addUnit(--table-mini-front-depth);
    top: 0;
    left: 0;
    position: absolute;
    transform: translateY(
        calc(addUnit(--table-mini-depth) - addUnit(--table-mini-thick))
      )
      translateZ(halfNum(--table-mini-front-height));

    @include face_list(
      ".table-mini-front",
      addUnit(--table-mini-front-width),
      addUnit(--table-mini-front-height),
      addUnit(--table-mini-front-depth),
      var(--glass-green-bg-top),
      var(--glass-green-bg-top),
      var(--glass-green-bg-front),
      var(--glass-green-bg-front),
      var(--glass-green-bg-left),
      var(--glass-green-bg-left)
    );
  }
  .table-mini-back {
    width: addUnit(--table-mini-back-width);
    height: addUnit(--table-mini-back-depth);
    top: 0;
    left: 0;
    position: absolute;
    transform: translateZ(
      calc(
        halfNum(--table-mini-back-height) +
          addUnit(--table-mini-back-height-than)
      )
    );

    @include face_list(
      ".table-mini-back",
      addUnit(--table-mini-back-width),
      addUnit(--table-mini-back-height),
      addUnit(--table-mini-back-depth),
      var(--glass-green-bg-top),
      var(--glass-green-bg-top),
      var(--glass-green-bg-front),
      var(--glass-green-bg-front),
      var(--glass-green-bg-left),
      var(--glass-green-bg-left)
    );
  }
  .table-mini-front-2,
  .table-mini-back-2 {
    left: calc(addUnit(--table-mini-width) - addUnit(--table-mini-thick));
  }
}

.door {
  width: addUnit(--door-width);
  height: addUnit(--door-depth);
  top: 0;
  left: 0;
  position: absolute;
  transform: translateX(addUnit(--door-width))
    translateZ(halfNum(--door-height));

  @include face_list(
    ".door",
    addUnit(--door-width),
    addUnit(--door-height),
    addUnit(--door-depth),
    var(--door-bg-top),
    var(--door-bg-top),
    var(--door-bg-front),
    var(--door-bg-front),
    var(--door-bg-left),
    var(--door-bg-right)
  );

  &.door-room-1 {
    top: auto;
    left: auto;
    right: 0;
    bottom: 5%;
  }

  &.door-room-2 {
    top: 0;
    left: auto;
    right: 0;
  }
}

.projector {
  width: addUnit(--projector-width);
  height: addUnit(--projector-depth);
  top: 0;
  left: 0;
  position: absolute;
  transform: translateX(
      calc((addUnit(--room-width) - addUnit(--projector-width)) / 2)
    )
    translateY(addUnit(--projector-start-y))
    translateZ(calc(addUnit(--room-height) - halfNum(--projector-height)));

  @include face_list(
    ".projector",
    addUnit(--projector-width),
    addUnit(--projector-height),
    addUnit(--projector-depth),
    var(--projector-bg-top),
    var(--projector-bg-top),
    var(--projector-bg-front),
    var(--projector-bg-front),
    var(--projector-bg-left),
    var(--projector-bg-left)
  );
}

.projector-light {
  position: relative;
  background: red;
}
.light {
  width: addUnit(--light-width);
  height: addUnit(--light-depth);
  top: 0;
  left: 50%;
  position: absolute;
  transform: translateX(-50%) translateZ(halfNum(--light-height));

  @include face_list(
    ".light",
    addUnit(--light-width),
    addUnit(--light-height),
    addUnit(--light-depth),
    var(--light-bg-top),
    var(--light-bg-top),
    var(--light-bg-front),
    var(--light-bg-front),
    var(--light-bg-left),
    var(--light-bg-left)
  );
}
